type: edu
custom_name: Sold!
files:
- name: src/cinema/Cinema.java
  visible: true
  text: "package cinema;\nimport java.util.Scanner;\n\npublic class Cinema {\n   \
    \ private char[][] theaterArr = new char[7][8];\n    public static Scanner scanner\
    \ = new Scanner(System.in);\n\n    public char[][] getTheaterArr() {\n       \
    \ return this.theaterArr;\n    }\n    \n    public Cinema() {\n        char[]\
    \ emptySeats = {'S','S','S','S','S','S','S','S'};\n        this.theaterArr = new\
    \ char[][]{emptySeats,emptySeats,emptySeats,emptySeats,\n                    \
    \    emptySeats,emptySeats,emptySeats};\n    }\n    \n    public void printTheater()\
    \ {\n        char[][] tempArr = this.getTheaterArr();\n        System.out.println(\"\
    Cinema:\");\n        System.out.println(\"  1 2 3 4 5 6 7 8\");\n        for (int\
    \ row = 0; row < 7; row++) {\n            System.out.print(row + 1 + \" \");\n\
    \            for(int col = 0; col < 8; col++) {\n                System.out.print(tempArr[row][col]\
    \ + \" \");\n            }\n            System.out.println();\n        }\n   \
    \ }\n\n    \n    public static void main(String[] args) {\n        Cinema cinema\
    \ = new Cinema();\n        cinema.printTheater();\n    }\n}"
  learner_created: false
- name: test/CinemaTests.java
  visible: false
  text: |
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    public class CinemaTests extends StageTest<String> {

        @DynamicTestingMethod
        CheckResult test1_testOutput() {

            TestedProgram program = new TestedProgram();
            String output = program.start();

            if (!output.toLowerCase().contains("enter the number of rows")) {
                return CheckResult.wrong("At the beginning your program should ask for entering the number of rows.\n" +
                    "Your output should contain 'Enter the number of rows:'");
            }

            output = program.execute("4");

            if (!output.toLowerCase().contains("enter the number of seats in each row")) {
                return CheckResult.wrong("After entering the number of rows your program should ask for entering" +
                    " the number of seats in each row.\n" +
                    "Your output should contain 'Enter the number of seats in each row'");
            }

            output = program.execute("5");

            if (!output.toLowerCase().contains("total income:")) {
                return CheckResult.wrong("After entering the number of seats in each row your program should print total income.\n" +
                    "Your output should contain 'Total income:'");
            }

            if (!output.contains("$200")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $200");
            }

            return CheckResult.correct();
        }

        @DynamicTestingMethod
        CheckResult test2_testIncomeCalculating() {

            TestedProgram program = new TestedProgram();
            program.start();

            String output = program.execute("8\n9");

            if (!output.contains("$648")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $648");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("9\n7");

            if (!output.contains("$560")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $560");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("7\n9");

            if (!output.contains("$558")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $558");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("1\n1");

            if (!output.contains("$10")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $10");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("3\n3");

            if (!output.contains("$90")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $90");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("8\n8");

            if (!output.contains("$576")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $576");
            }

            return CheckResult.correct();
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/133/stages/710/implement#comment
status: Solved
record: 1
